// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SysLog.Repository.Data;

#nullable disable

namespace SysLog.Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250612132448_Initial2")]
    partial class Initial2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SysLog.Repository.Model.Action", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AcctionName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("LogId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LogId")
                        .IsUnique();

                    b.ToTable("actions", (string)null);
                });

            modelBuilder.Entity("SysLog.Repository.Model.Interface", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LogId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LogId")
                        .IsUnique();

                    b.ToTable("interfaces", (string)null);
                });

            modelBuilder.Entity("SysLog.Repository.Model.Log", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LogId"));

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("IpDestiny")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IpOut")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LogId");

                    b.ToTable("logs", (string)null);
                });

            modelBuilder.Entity("SysLog.Repository.Model.LogType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LogId")
                        .HasColumnType("integer");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LogId")
                        .IsUnique();

                    b.ToTable("logs_type", (string)null);
                });

            modelBuilder.Entity("SysLog.Repository.Model.Protocol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LogId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LogId")
                        .IsUnique();

                    b.ToTable("protocols", (string)null);
                });

            modelBuilder.Entity("SysLog.Repository.Model.Signature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LogTypeId")
                        .HasColumnType("integer");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("LogTypeId")
                        .IsUnique();

                    b.ToTable("signatures", (string)null);
                });

            modelBuilder.Entity("SysLog.Repository.Model.Action", b =>
                {
                    b.HasOne("SysLog.Repository.Model.Log", "Log")
                        .WithOne("Action")
                        .HasForeignKey("SysLog.Repository.Model.Action", "LogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Log");
                });

            modelBuilder.Entity("SysLog.Repository.Model.Interface", b =>
                {
                    b.HasOne("SysLog.Repository.Model.Log", "Log")
                        .WithOne("Interface")
                        .HasForeignKey("SysLog.Repository.Model.Interface", "LogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Log");
                });

            modelBuilder.Entity("SysLog.Repository.Model.LogType", b =>
                {
                    b.HasOne("SysLog.Repository.Model.Log", "Log")
                        .WithOne("LogType")
                        .HasForeignKey("SysLog.Repository.Model.LogType", "LogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Log");
                });

            modelBuilder.Entity("SysLog.Repository.Model.Protocol", b =>
                {
                    b.HasOne("SysLog.Repository.Model.Log", "Log")
                        .WithOne("Protocol")
                        .HasForeignKey("SysLog.Repository.Model.Protocol", "LogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Log");
                });

            modelBuilder.Entity("SysLog.Repository.Model.Signature", b =>
                {
                    b.HasOne("SysLog.Repository.Model.LogType", "LogType")
                        .WithOne("Signature")
                        .HasForeignKey("SysLog.Repository.Model.Signature", "LogTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LogType");
                });

            modelBuilder.Entity("SysLog.Repository.Model.Log", b =>
                {
                    b.Navigation("Action")
                        .IsRequired();

                    b.Navigation("Interface")
                        .IsRequired();

                    b.Navigation("LogType")
                        .IsRequired();

                    b.Navigation("Protocol")
                        .IsRequired();
                });

            modelBuilder.Entity("SysLog.Repository.Model.LogType", b =>
                {
                    b.Navigation("Signature");
                });
#pragma warning restore 612, 618
        }
    }
}
